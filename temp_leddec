LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY leddec IS
    PORT (
        clk_in : IN STD_LOGIC;
        data : IN STD_LOGIC_VECTOR (7 DOWNTO 0);
        anode : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);
        seg : OUT STD_LOGIC_VECTOR (6 DOWNTO 0);
        timer_value : IN STD_LOGIC_VECTOR (10 DOWNTO 0);  -- NEW -- timer value
        timer_active : IN BOOLEAN  -- NEW -- timer activation signal
    );
END leddec;

ARCHITECTURE Behavioral OF leddec IS
    SIGNAL dataSelect : STD_LOGIC := '0'; -- binary value of the current digit
    SIGNAL selMul : INTEGER := 1;
    SIGNAL choose : INTEGER := 1;
    SIGNAL timer_count : STD_LOGIC_VECTOR (10 DOWNTO 0) := (OTHERS => '0');  -- NEW -- timer count

    -- Hex values for display
    CONSTANT HEX_0 : STD_LOGIC_VECTOR(6 DOWNTO 0) := "0000001";
    CONSTANT HEX_1 : STD_LOGIC_VECTOR(6 DOWNTO 0) := "1001111";
    CONSTANT HEX_2 : STD_LOGIC_VECTOR(6 DOWNTO 0) := "1111111";

BEGIN
    PROCESS (clk_in)
    BEGIN
        IF rising_edge(clk_in) THEN
            IF selMul = 50 THEN
                selMul <= 1;
                IF choose = 8 THEN
                    choose <= 1;
                ELSE
                    choose <= choose + 1;
                END IF;
            ELSE
                selMul <= selMul + 1;
            END IF;
        END IF;

        dataSelect <= data(0) when choose = 1 ELSE
                      data(1) when choose = 2 ELSE
                      data(2) when choose = 3 ELSE
                      data(3) when choose = 4 ELSE
                      data(4) when choose = 5 ELSE
                      data(5) when choose = 6 ELSE
                      data(6) when choose = 7 ELSE
                      data(7) when choose = 8;

        seg <= HEX_0 WHEN dataSelect = '0' ELSE
               HEX_1 WHEN dataSelect = '1' ELSE
               HEX_2;

        anode <= "11111110" WHEN choose = 1 ELSE
                 "11111101" WHEN choose = 2 ELSE
                 "11111011" WHEN choose = 3 ELSE
                 "11110111" WHEN choose = 4 ELSE
                 "11101111" WHEN choose = 5 ELSE
                 "11011111" WHEN choose = 6 ELSE
                 "10111111" WHEN choose = 7 ELSE
                 "01111111" WHEN choose = 8 ELSE
                 "11111111";
    END PROCESS;

    -- Timer logic
    PROCESS (clk_in)
    BEGIN
        IF rising_edge(clk_in) THEN
            IF timer_active = TRUE THEN
                timer_count <= timer_count + 1;
            ELSE
                timer_count <= (OTHERS => '0');
            END IF;
        END IF;
    END PROCESS;

    -- Display timer value
    PROCESS
    BEGIN
        IF timer_count = timer_value THEN
            anode <= "01111111";  -- Display 'H' for half (middle of the screen)
            seg <= "1101001";     -- Corresponding 7-segment code for 'H'
        END IF;
    END PROCESS;

END Behavioral;
